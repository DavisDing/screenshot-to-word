name: Build Windows Executable, Auto Tag and Release

on:
  push:
    branches:
      - '*'    # 可根据实际情况限定主分支
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get_tag
        shell: pwsh
        run: |
          git fetch --tags
          $tags = git tag
          if ([string]::IsNullOrWhiteSpace($tags)) {
            echo "No tags found."
            echo "latest=" >> $env:GITHUB_OUTPUT
          } else {
            $latestTag = git describe --tags (git rev-list --tags --max-count=1)
            echo "latestTag=$latestTag"
            echo "latest=$latestTag" >> $env:GITHUB_OUTPUT
          }

      - name: Calculate new tag
        id: new_tag
        shell: pwsh
        run: |
          $latest = "${{ steps.get_tag.outputs.latest }}"
          if ([string]::IsNullOrEmpty($latest)) {
            $newTag = "v0.0.1"
          } else {
            $version = $latest.TrimStart("v").Split(".")
            $major = [int]$version[0]
            $minor = [int]$version[1]
            $patch = [int]$version[2] + 1
            $newTag = "v$major.$minor.$patch"
          }
          echo "newTag=$newTag"
          echo "tag=$newTag" >> $env:GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.new_tag.outputs.tag }}
          git push origin ${{ steps.new_tag.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build exe with PyInstaller
        run: |
          pyinstaller main.py --name "DesktopTestTool" --noconfirm --onefile

      - name: Zip exe
        run: Compress-Archive -Path dist/DesktopTestTool.exe -DestinationPath DesktopTestTool-win.zip

      - name: Create GitHub Release and Upload Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.new_tag.outputs.tag }} ./DesktopTestTool-win.zip \
            --title "Release ${{ steps.new_tag.outputs.tag }}" \
            --notes "Automated release for version ${{ steps.new_tag.outputs.tag }}"